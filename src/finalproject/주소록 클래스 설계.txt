주의사항
  나이, 우편번호 : int
    -> int 타입으로 연산이 가능한가? 우편번호는 연산을 하는 것이 의미가 없음 -> String
  전화번호
    -> 010-1234-1234  --> String

1. 사람 정보.class
  - 멤버 변수 목록
  	- 이름 (String)
  	- 나이 (int)
  	- 생년월일 (LocalDate)
    - (주소의 자리였음) -> 데이터 클래스로 처리하기 위해 분리
  	- 별명 (String)
  	- 연락처 (String)
  	- 이메일 (String)
  	- 추가 날짜 (LocalDate)
  	- 마지막 수정 날짜 (LocalDate)

2. 주소.class (데이터 클래스) -> 사람정보 has a 주소
  - 멤버 변수 목록
  	- 시/군/구 (String)
  	- 읍/면/동 (String)
  	- 길(도로명 주소) (String)
  	- 번지(구 주소) (String)
  	- 동/호수 (String)
  	- 우편번호 (String)

(여러 사람들을 관리하려면 어떻게 해야할까?)

3. 주소록.class
  - 멤버 변수 목록
 =   - 사람 정보들 (List<사람정보>) - 주소록 has a 사람 정보
 =   // 맵은 쓰이지 않는다. 키값이 변경됬을때 어떻게 처리할지 난감함. 동일한 문자는 동일한 키값을 가지므로

  - 기능들
    - 이름 + 별명 검색 (String )
=     :: 파라미터로 들어온 검색어가 이름 혹은 별명에 포함되어 있다면, 해당 사람 정보의 인덱스와 이름(나이)를 출력한다.
=     	검색어가 비어있으면 모든 사람 정보의 인덱스와 이름(나이)를 출력한다.
==     	검색 결과가 없을 때에는 "해당하는 사람이 없습니다"를 출력한다.

    - 연락처 검색 (String 검색어)
=     :: 파라미터로 들어온 검색어가 이름 혹은 별명에 포함되어 있다면, 해당 사람 정보의 인덱스와 이름(나이)를 출력한다.
 =    	검색어가 비어있으면 모든 사람 정보의 인덱스와 이름(나이)를 출력한다.
  =   	검색 결과가 없을 때에는 "해당하는 사람이 없습니다"를 출력한다.

    - 보름 이내에 생일을 맞이하는 사람 검색 (
=    	:: 사람 정보들에 있는 생일 중 오늘과 오늘부터 15일 후 의 날짜 범위에 있는 사람들의 인덱스와 이름(나이)를 출력한다.
=    	:: 검색 결과가 없을때는 "15일내 생일인 사람이 없습니다."를 출력한다.

 =   - 보름 전에 생일을 맞이한 사람 검색

    - 주소 검색 (String 검색어)
      - 주소 전체 정보를 검색
        - toString() 활용
 =       	:: 파라미터로 넘어온 검색어가 사람 정보들에 있는 사람들의 주소에 포함되어있다면 해당 사람 정보의 인덱스와 이름(나이)를 출력한다.
=        	:: 검색어가 비어있으면 모든 사람 정보의 인덱스와 이름(나이)를 출력한다.
=        	:: 검색결과가 없을때에는 해당 주소에 사는 사람이 없습니다. 를 출력한다.

	- 등록
	  : 사람 정보들에 새로운 주소록을 추가(사람정보 등록_인스턴스)
=	     :: 파라미터로 넘어온 등록_인스턴스의 추가 날짜에 현재 날짜를 할당하고 사람정보들에 추가하낟.
=	     	등록 인스턴스가 null이거나 이름이 비어있다면 "등록할 수 없습니다."라고 예외 출력
=	     	정상적으로 등록되었으면 "주소록에 총 n명의 사람이 있습니다 라고 출력

	- 한 사람 조회
	  : 사람 정보들에서 한 사람의 정보만 조회 (int index) -> List의 index 해당 사람을 찾아 모든 정보를 출력한다.
=	  	:: 정상적으로 입력되었을 경우 현재 총 n명의 사람이 있습니다. 라고 출력
=	  	:: 사람정보들의 인덱스 범위에서 벗어난 인덱스라면 "존재하지 않는 사람입니다." 출력

	- 삭제
	  : 사람 정보들에서 특정 사람만 삭제(int index)
		 :: 사람정보들에서 인덱스로 해당 사람을 찾아 삭제한다.
=		 	삭제하기 전 "이름(나이)를 정말 삭제하겠습니가?"라고 물어보고삭제한다고 할때만 삭제해야하며 "삭제가 완료되었습니다"를 출력한다.
=		 	삭제하지 않는다고 할 때는 "삭제가 취소되었습니다"를 출력한다.
=		 	사람정보들에서 인덱스 범위에서 벗어난 인덱스라면 "존재하지 않는 사람입니다."를 출력한다.

	- 수정
	  : 사람정보들에서 특정 사람만 수정(int index, 사람정보 새로운_사람정보)
	     :: 사람정보들에서 인덱스로 해당 사람을 찾아 새로운_사람정보로 변경한다.
	     ::	새로운_사람정보에 기존의 추가날짜를 할당하고 수정날짜를 오늘로 할당한다.
=	     ::	새로운 사람정보가 null이거나 이름이 비어있다면 "등록할 수 없습니다."라고 예외 출력
	     ::	수정하기전 이름(나이)를 정말로 수정하겠습니까? 라고 물어보고수정한다고 할 때만 수정해야 하며 수정이 오나료되었습니다. 를 출력한다.
	     ::	수정하지 않는다고 할때는 수정이 취소되었습니다. 를 출력한다.
=	     ::	사람정보들에서 인덱스 범위에서 벗어난 인덱스라면 존재하지 않는 사람입니다. 를 출력
